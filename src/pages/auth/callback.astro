---
import Layout from "../../layouts/Layout.astro";
import { supabase } from "../../utils/database";

// check if this is an app login
const url = new URL(Astro.request.url);
const isAppLogin = url.searchParams.get('app') === 'true';

// get the session
const { data: { session } } = await supabase.auth.getSession();

// if no session, redirect to login
if (!session) {
  return Astro.redirect("/auth/login");
}
---

<Layout title="Login">
  <div id="auth-callback" class="flex flex-col items-center w-full min-h-[100dvh] justify-center p-12 pt-6 relative">
    <div class="fixed inset-0 flex justify-center items-center" aria-hidden="true">
      <div class="bg-[#BCB1E7]/30 h-[70vh] w-[70vh] rounded-full blur-[150px]"></div>
    </div>
    <div class="h-fit w-full flex max-w-xl">
      <div class="backdrop-blur-md bg-white/[0.02] border border-white/[0.05] rounded-xl p-12 flex flex-col items-start justify-start shadow-lg shadow-black/10 w-full h-full">
        <h1 class="text-white text-3xl font-semibold">Redirecting...</h1>
        <h2 class="mt-2 text-white/70">
          {isAppLogin ? "We are redirecting you to Dione app in a few seconds." : "We are redirecting you to your profile page."}
        </h2>
        <div id="error-message" class="mt-4 text-red-400 text-sm hidden"></div>
        <div id="redirect-link" class="mt-4 text-xs text-white/40 hidden">
          If not redirected, please <a href="#" class="text-white/70 hover:underline">click here</a>.
        </div>
      </div>
    </div>
  </div>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', async () => {
      try {
        const hash = window.location.hash.substring(1);
        const params = new URLSearchParams(hash);
        const accessToken = params.get('access_token');
        const refreshToken = params.get('refresh_token');

        if (!accessToken) {
          throw new Error('No access token found in URL');
        }

        // set the session in supabase
        const { error: sessionError } = await window.supabase.auth.setSession({
          access_token: accessToken,
          refresh_token: refreshToken || '',
        });

        if (sessionError) {
          throw sessionError;
        }

        // encode tokens
        const encodedAccessToken = encodeURIComponent(accessToken);
        const encodedRefreshToken = refreshToken ? encodeURIComponent(refreshToken) : '';
        
        // check if this is an app login
        const urlParams = new URLSearchParams(window.location.search);
        const isAppLogin = urlParams.get('app') === 'true';
        
        let redirectUrl;
        if (isAppLogin) {
          // app login - redirect to dione:// protocol
          redirectUrl = `dione://auth=${encodedAccessToken}${encodedRefreshToken ? `&refresh=${encodedRefreshToken}` : ''}`;
        } else {
          // web login - redirect to profile page
          redirectUrl = '/profile';
        }

        const redirectLink = document.querySelector('#redirect-link a');
        if (redirectLink) {
          redirectLink.href = redirectUrl;
          redirectLink.addEventListener('click', (e) => {
            e.preventDefault();
            window.location.href = redirectUrl;
          });
        }
        
        const redirectElement = document.getElementById('redirect-link');
        if (redirectElement) {
          redirectElement.classList.remove('hidden');
        }
        
        // try redirect
        window.location.replace(redirectUrl);
        
      } catch (error) {
        console.error('Auth callback error:', error);
        const errorElement = document.getElementById('error-message');
        if (errorElement) {
          errorElement.textContent = `Error: ${error.message || 'Authentication failed. Please try again.'}`;
          errorElement.classList.remove('hidden');
        }
      }
    });
  </script>
</Layout>
